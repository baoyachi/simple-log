name: Rust

on: [push, pull_request]

jobs:

  codestyle:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v2
        with:
          components: rustfmt
          # Note that `nightly` is required for `license_template_path`, as
          # it's an unstable feature.
          rust-version: nightly
      - uses: actions/checkout@v4
      - run: cargo +nightly fmt -- --check --config-path <(echo 'license_template_path = "HEADER"')

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v2
        with:
          components: clippy
      - uses: actions/checkout@v4
      - run: cargo clippy --all-targets --all-features -- -D warnings

  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v2
      - uses: actions/checkout@master
      - run: |
          cargo check --all-targets --all-features
          cargo check --no-default-features

  test:
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust }}
      - name: Install Tarpaulin
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: 0.14.2
          use-tool-cache: true
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          cargo test --all-features
          cargo test --examples --all-features
      - name: Coverage
        if: matrix.rust == 'stable'
        run: cargo tarpaulin -o Lcov --output-dir ./coverage
      - name: Coveralls
        if: matrix.rust == 'stable'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v2
      - uses: actions/checkout@v4
      - name: Publish
        shell: bash
        run: |
          cargo publish -p simple-log-derive --token ${{ secrets.CRATES_TOKEN }}
          cargo publish --token ${{ secrets.CRATES_TOKEN }}